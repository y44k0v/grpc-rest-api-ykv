// Code generated by goa v3.16.0, DO NOT EDIT.
//
// product client
//
// Command:
// $ goa gen github.com/y44k0v/grpc-rest-api-ykv/design

package product

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "product" service client.
type Client struct {
	AddproductEndpoint  goa.Endpoint
	GetproductEndpoint  goa.Endpoint
	ShowproductEndpoint goa.Endpoint
}

// NewClient initializes a "product" service client given the endpoints.
func NewClient(addproduct, getproduct, showproduct goa.Endpoint) *Client {
	return &Client{
		AddproductEndpoint:  addproduct,
		GetproductEndpoint:  getproduct,
		ShowproductEndpoint: showproduct,
	}
}

// Addproduct calls the "addproduct" endpoint of the "product" service.
// Addproduct may return the following errors:
//   - "not_found" (type *NotFound): User not found
//   - error: internal error
func (c *Client) Addproduct(ctx context.Context, p *AddproductPayload) (err error) {
	_, err = c.AddproductEndpoint(ctx, p)
	return
}

// Getproduct calls the "getproduct" endpoint of the "product" service.
// Getproduct may return the following errors:
//   - "not_found" (type *NotFound): Product not found
//   - error: internal error
func (c *Client) Getproduct(ctx context.Context, p *GetproductPayload) (res *ProductManagement, err error) {
	var ires any
	ires, err = c.GetproductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ProductManagement), nil
}

// Showproduct calls the "showproduct" endpoint of the "product" service.
func (c *Client) Showproduct(ctx context.Context) (res ProductManagementCollection, err error) {
	var ires any
	ires, err = c.ShowproductEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ProductManagementCollection), nil
}
